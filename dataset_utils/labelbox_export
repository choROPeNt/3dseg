import labelbox
from labelbox.data.annotation_types import Geometry
from labelbox import Client, OntologyBuilder
from getpass import getpass
from PIL import Image
import numpy as np
import os
import matplotlib.pyplot as plt
import h5py

# Enter your Labelbox API key here
def rgb2gray(rgb):
    return np.dot(rgb[...,:3], [0.2989, 0.5870, 0.1140])

def  main():
    # Create Labelbox client
    with open("dataset_utils/api_key.txt") as LB_API_KEY:
        lb = labelbox.Client(api_key=LB_API_KEY.readlines()[0])
    # Get project by ID
    project = lb.get_project('ckqqdrhd9bino0yck5g00erzn')
    print("API check done")
    # 
    labels = project.label_generator()
    labels = labels.as_list()

    # Create a mapping for the colors
    hex_to_rgb = lambda hex_color: tuple(int(hex_color[i+1:i+3], 16) for i in (0, 2, 4))
    colors = {tool.name: hex_to_rgb(tool.color) for tool in OntologyBuilder.from_project(project).tools}
    
    ## create arrays
    vol = np.ndarray(shape=(1000,1000,224))
    seg = np.ndarray(shape=(1000,1000,224))
    

    
    # Grab the first label and corresponding image
    for n,label in enumerate(labels):
        image_np = label.data.value
        seg_np = np.empty_like(image_np)
        image_np = rgb2gray(image_np)
        vol[:,:,n] = image_np
        for annotation in label.annotations:
            if isinstance(annotation.value, Geometry):
                seg_np = annotation.value.draw(canvas = seg_np, color = colors[annotation.name], thickness = 5)
        seg_np = rgb2gray(seg_np)
        seg[:,:,n] = seg_np
    
    with h5py.File("Biax_type285.hdf5", "w") as f:
        f.create_dataset('raw', data = vol)
        f.create_dataset('label', data = seg)


if __name__ == "__main__":
    main()